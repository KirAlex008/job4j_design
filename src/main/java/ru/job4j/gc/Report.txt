C:\Users\A>jps
2976 Launcher
6020 RemoteMavenServer36
7416
8520 Launcher
8648 JConsole
2684 StartUI
2972 Jps


C:\Users\A>jhsdb jmap --heap --pid 2424
Attaching to process ID 2424, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 14.0.2+12-46

using thread-local object allocation.
Garbage-First (G1) GC with 4 thread(s)

Heap Configuration:
   MinHeapFreeRatio         = 40
   MaxHeapFreeRatio         = 70
   MaxHeapSize              = 734003200 (700.0MB)
   NewSize                  = 1363144 (1.2999954223632812MB)
   MaxNewSize               = 440401920 (420.0MB)
   OldSize                  = 5452592 (5.1999969482421875MB)
   NewRatio                 = 2
   SurvivorRatio            = 8
   MetaspaceSize            = 21807104 (20.796875MB)
   CompressedClassSpaceSize = 1073741824 (1024.0MB)
   MaxMetaspaceSize         = 17592186044415 MB
   G1HeapRegionSize         = 1048576 (1.0MB)

Heap Usage:
G1 Heap:
   regions  = 700
   capacity = 734003200 (700.0MB)
   used     = 27763360 (26.477203369140625MB)
   free     = 706239840 (673.5227966308594MB)
   3.7824576241629466% used
G1 Young Generation:
Eden Space:
   regions  = 12
   capacity = 81788928 (78.0MB)
   used     = 12582912 (12.0MB)
   free     = 69206016 (66.0MB)
   15.384615384615385% used
Survivor Space:
   regions  = 1
   capacity = 2097152 (2.0MB)
   used     = 1548960 (1.477203369140625MB)
   free     = 548192 (0.522796630859375MB)
   73.86016845703125% used
G1 Old Generation:
   regions  = 13
   capacity = 50331648 (48.0MB)
   used     = 13631488 (13.0MB)
   free     = 36700160 (35.0MB)
   27.083333333333332% used

Анализ jstack показывает, что GC по умолчанию G1. Общее количество регионов 700 по 1 МБ, использовано 26. Из них 12 - Eden, 1 - Survivor, 13 - Old Generation.

Анализ jconsile показывает, что программа использует 2498 классов, когда размер используемой памяти достигает 13 Мб, запускается сборщик мусора, но программа не может использовать менее 4 Мб для функционирования.

При выставлении ключей -Xmx4m -Xms4m прогисходит переполнение памяти, выводится сообщение Exception in thread "RMI TCP Connection(idle)" java.lang.OutOfMemoryError: Java heap space

Состояние VM
using thread-local object allocation.
Garbage-First (G1) GC with 4 thread(s)

Heap Configuration:
   MinHeapFreeRatio         = 40
   MaxHeapFreeRatio         = 70
   MaxHeapSize              = 4194304 (4.0MB)
   NewSize                  = 1363144 (1.2999954223632812MB)
   MaxNewSize               = 2097152 (2.0MB)
   OldSize                  = 5452592 (5.1999969482421875MB)
   NewRatio                 = 2
   SurvivorRatio            = 8
   MetaspaceSize            = 21807104 (20.796875MB)
   CompressedClassSpaceSize = 1073741824 (1024.0MB)
   MaxMetaspaceSize         = 17592186044415 MB
   G1HeapRegionSize         = 1048576 (1.0MB)

Heap Usage:
G1 Heap:
   regions  = 4
   capacity = 4194304 (4.0MB)
   used     = 3193112 (3.0451889038085938MB)
   free     = 1001192 (0.9548110961914062MB)
   76.12972259521484% used
G1 Young Generation:
Eden Space:
   regions  = 0
   capacity = 0 (0.0MB)
   used     = 0 (0.0MB)
   free     = 0 (0.0MB)
   0.0% used
Survivor Space:
   regions  = 0
   capacity = 0 (0.0MB)
   used     = 0 (0.0MB)
   free     = 0 (0.0MB)
   0.0% used
G1 Old Generation:
   regions  = 0
   capacity = 4194304 (4.0MB)
   used     = 3193112 (3.0451889038085938MB)
   free     = 1001192 (0.9548110961914062MB)
   76.12972259521484% used
Создано всего 4 региона и не один из них не смог быть назначен как Eden, Survivor, Old Generation.

Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread "RMI TCP Connection(idle)"

В прошлом задании был сделан вывод, что Tracker на локальной машине лучше иметь Serial GC. Соответственно запуск с ключами -Xmx4m -Xms4m -XX:+UseSerialGC позволяет приложению запуститься,
 и функционировать. Eden + 1 Survivor Space 1.1875MB tenured generation 2.6875MB